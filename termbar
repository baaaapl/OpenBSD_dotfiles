#!/bin/sh

## Debug
#set -x

trap 'exec $0' HUP # Restart itself 
trap 'tput cnorm; exit 1' INT QUIT TERM

esc="\033"
reset="${esc}[0m"
redf="${esc}[31m"
cyanf="${esc}[90m";
purplef="${esc}[37m"
pipe="${purplef}|${reset}"

today()
{
	DATE=$(date '+%a %d %b %H:%M')
}

desktop_id()
{
	DESKTOP_ID=$(xprop -root 32c '\t$0' _NET_CURRENT_DESKTOP | cut -f 2)
}

active_window()
{
	WIN_ID=$(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW 2>/dev/null | cut -f 2)
	# Fallback for empty window titles
	WIN_TITLE=$(xprop -id "$WIN_ID" '\t$0' _NET_WM_NAME 2>/dev/null | awk -F '"' '{ print $2 }' || echo "N/A")
	WIN_TITLE=$(printf "%.50s" "$WIN_TITLE") # Truncate to 50 characters
}

cpu()
{
	CPU_TEMP=$(sysctl hw.sensors.acpithinkpad0.temp0 2>/dev/null | cut -d "=" -f 2 | cut -d "." -f 1)
	CPU_SPEED=$(printf "%4s" $(sysctl hw.cpuspeed 2>/dev/null | cut -d "=" -f 2 | cut -d "." -f 1))
}

bat()
{
	BAT=$(apm -l 2>/dev/null)
}

bat_status()
{
	STATUS=$(sysctl hw.sensors.acpiac0.indicator0 2>/dev/null | grep -c On)
	[ -z "$STATUS" ] && STATUS=0

	if [ "${STATUS}" -eq "1" ]; then
		BAT_STATUS="Connected"
	else
		BAT_STATUS="${redf}Disconnected${reset}"
	fi
}

mem()
{
	MEM=$(top -n | grep Memory | awk {'print $6'})
}

wifi()
{
	SSID=$(ifconfig | grep ieee | awk {'print $3'})
}

network()
{
	IIP=$(ifconfig iwm0 | grep inet | awk '{print $2}')
	PIP=$(dig +short myip.opendns.com @resolver1.opendns.com | awk {'printf $1'})
}

my_name()
{
	YO=$(printf "OpenBSD")
}

tput civis

while true; do
	today
	desktop_id
	active_window
	cpu
	mem
	bat
	bat_status
	wifi
	network
	my_name
	
	# Use tput ed for better screen clearing
	tput cup 1 0
	printf "[${DESKTOP_ID}] ${pipe} ${cyanf}Win:${reset} ${WIN_TITLE} ${pipe} ${cyanf}${YO}${reset} ${pipe} ${DATE} ${pipe} ${cyanf}CPU:${reset} ${CPU_SPEED} MHz (${CPU_TEMP}Â°) ${pipe} ${cyanf}Mem:${reset} ${MEM} "
	printf "${pipe} ${cyanf}Bat:${reset} $BAT - ${BAT_STATUS} ${pipe} ${cyanf}SSID:${reset}${SSID}${pipe}"
	printf " ${cyanf}IPs:${reset} ${PIP} / ${IIP}$(tput el)" # Clear to end of line
	
	sleep 1
done
